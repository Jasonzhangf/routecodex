name: Duplicate Code Management

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:
    inputs:
      auto_fix:
        description: 'Ëá™Âä®‰øÆÂ§çÈáçÂ§ç‰ª£Á†Å'
        required: false
        default: 'false'
        type: boolean
      threshold:
        description: 'ÈáçÂ§ç‰ª£Á†ÅÈòàÂÄº(Ë°åÊï∞)'
        required: false
        default: '5'
        type: string

jobs:
  quick-pass:
    runs-on: ubuntu-latest
    steps:
    - name: Quick pass (duplicate-code checks disabled by default)
      run: echo "Duplicate code analysis disabled by default; run manually to execute heavy job."

  duplicate-code-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js (.nvmrc)
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create reports directory
      run: mkdir -p reports

    - name: Analyze duplicate code
      run: |
        threshold="${{ github.event.inputs.threshold || '5' }}"
        npm run duplication:analyze -- --threshold $threshold

    - name: Upload duplicate code report
      uses: actions/upload-artifact@v3
      with:
        name: duplicate-code-report
        path: reports/
        retention-days: 30

    - name: Generate PR for duplicate code fixes
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.auto_fix == 'true')
      run: |
        # ÂàõÂª∫ÂàÜÊîØ
        branch_name="fix/duplicate-code-$(date +%Y%m%d)"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b $branch_name
        
        # ËøêË°åËá™Âä®‰øÆÂ§ç
        threshold="${{ github.event.inputs.threshold || '5' }}"
        npm run duplication:fix -- --threshold $threshold --auto-fix true
        
        # Êèê‰∫§Êõ¥Êîπ
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: refactor duplicate code automatically"
          
          # Êé®ÈÄÅÂàÜÊîØ
          git push origin $branch_name
          
          # ÂàõÂª∫PR
          gh pr create \
            --title "Automated duplicate code refactoring" \
            --body "This PR automatically refactors duplicate code detected in the codebase.

          ## Changes
          - Extracted common functions and utilities
          - Removed duplicate code blocks
          - Updated imports and references

          ## Impact
          - Reduced code duplication by X%
          - Improved maintainability
          - Enhanced code consistency

          Generated by duplicate code management workflow." \
            --base main \
            --head $branch_name
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment on PR with duplicate code report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const reportFiles = fs.readdirSync('reports');
            const reportFile = reportFiles.find(f => f.includes('duplicate-code-report'));
            
            if (reportFile) {
              const report = JSON.parse(fs.readFileSync(path.join('reports', reportFile), 'utf8'));
              
              const comment = `
          ## üìä Duplicate Code Analysis Report
          
          ### Summary
          - **Total Duplicates Found**: ${report.summary.totalDuplicates}
          - **Refactoring Suggestions**: ${report.summary.totalSuggestions}
          - **High Priority Issues**: ${report.summary.highPrioritySuggestions}
          - **Medium Priority Issues**: ${report.summary.mediumPrioritySuggestions}
          - **Low Priority Issues**: ${report.summary.lowPrioritySuggestions}
          
          ### Recommendations
          ${report.suggestions.slice(0, 5).map(s => 
            `- [${s.priority.toUpperCase()}] ${s.strategy}: ${s.pattern.type} (${s.impact.filesAffected} files)`
          ).join('\n')}
          
          ${report.suggestions.length > 5 ? `\n... and ${report.suggestions.length - 5} more suggestions` : ''}
          
          ### Next Steps
          1. Review the detailed report in the artifacts
          2. Apply high-priority refactoring suggestions
          3. Consider enabling auto-fix for routine maintenance
          
          ---
          *Generated by duplicate code management workflow*
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Could not generate duplicate code comment:', error.message);
          }

  duplicate-code-monitoring:
    runs-on: ubuntu-latest
    needs: duplicate-code-analysis
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js (.nvmrc)
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Monitor duplicate code trends
      run: |
        # ‰∏ãËΩΩÂéÜÂè≤Êä•Âëä
        mkdir -p historical-reports
        gh run list --repo ${{ github.repository }} --workflow duplicate-code-management.yml --json createdAt,status,conclusion > recent-runs.json
        
        # ÂàÜÊûêË∂ãÂäø
        node scripts/analyze-duplicate-trends.mjs || echo "Trend analysis completed"

    - name: Create issue for critical duplicate code
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® High duplicate code detected',
            body: `
          ## Duplicate Code Alert
          
          The automated duplicate code detection has identified a high level of code duplication that requires attention.
          
          ### Impact
          - Code maintainability is at risk
          - Potential for bugs across multiple locations
          - Increased technical debt
          
          ### Recommended Actions
          1. Review the duplicate code report in the workflow artifacts
          2. Prioritize refactoring high-impact duplicate blocks
          3. Consider establishing coding standards to prevent future duplication
          
          ### Resources
          - [Duplicate Code Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - [Refactoring Guidelines](https://github.com/${{ github.repository }}/docs/REFACTORING.md)
          
          ---
          *This issue was created automatically by the duplicate code management workflow*
            `,
            labels: ['technical-debt', 'code-quality', 'duplicate-code']
          })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
