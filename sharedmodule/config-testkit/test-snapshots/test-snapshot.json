{
  "id": "test-snapshot",
  "name": "Test Snapshot",
  "description": "Created by test runner",
  "input": {
    "version": "1.0.0",
    "port": 8080,
    "virtualrouter": {
      "inputProtocol": "openai",
      "outputProtocol": "openai",
      "providers": {
        "openai-provider": {
          "id": "openai-provider",
          "type": "openai",
          "enabled": true,
          "apiKey": "sk-test-key",
          "models": {
            "gpt-3.5-turbo": {
              "maxTokens": 4096
            }
          }
        }
      },
      "routing": {
        "default": [
          "openai-provider.gpt-3.5-turbo"
        ],
        "coding": [],
        "longcontext": [],
        "tools": [],
        "thinking": [],
        "vision": [],
        "websearch": [],
        "background": []
      }
    }
  },
  "expectedOutput": {
    "isValid": true,
    "errors": [],
    "warnings": [],
    "normalized": {
      "port": 8080,
      "schemaVersion": "2.0.0",
      "stableSorting": {
        "enabled": true,
        "sortKeyMappings": true,
        "sortProviders": true,
        "sortRouting": true
      },
      "version": "1.0.0",
      "virtualrouter": {
        "inputProtocol": "openai",
        "outputProtocol": "openai",
        "providers": {
          "openai-provider": {
            "apiKey": "***REDACTED***",
            "compatibility": {
              "config": {},
              "type": "passthrough-compatibility"
            },
            "enabled": true,
            "id": "openai-provider",
            "keyAliases": [
              "key1"
            ],
            "models": {
              "gpt-3.5-turbo": {
                "maxTokens": 4096
              }
            },
            "type": "openai-provider"
          }
        },
        "routing": {
          "background": [],
          "coding": [],
          "default": [
            "openai-provider.gpt-3.5-turbo"
          ],
          "longcontext": [],
          "thinking": [],
          "tools": [],
          "vision": [],
          "websearch": []
        }
      }
    },
    "compatibilityConfig": {
      "originalConfig": {
        "version": "1.0.0",
        "port": 8080,
        "virtualrouter": {
          "inputProtocol": "openai",
          "outputProtocol": "openai",
          "providers": {
            "openai-provider": {
              "id": "openai-provider",
              "type": "openai",
              "enabled": true,
              "apiKey": "***REDACTED***",
              "models": {
                "gpt-3.5-turbo": {
                  "maxTokens": 4096
                }
              },
              "compatibility": {
                "type": "passthrough-compatibility",
                "config": {}
              }
            }
          },
          "routing": {
            "default": [
              "openai-provider.gpt-3.5-turbo"
            ],
            "coding": [],
            "longcontext": [],
            "tools": [],
            "thinking": [],
            "vision": [],
            "websearch": [],
            "background": []
          }
        },
        "schemaVersion": "2.0.0",
        "stableSorting": {
          "enabled": true,
          "sortProviders": true,
          "sortRouting": true,
          "sortKeyMappings": true
        }
      },
      "normalizedConfig": {
        "port": 8080,
        "schemaVersion": "2.0.0",
        "stableSorting": {
          "enabled": true,
          "sortKeyMappings": true,
          "sortProviders": true,
          "sortRouting": true
        },
        "version": "1.0.0",
        "virtualrouter": {
          "inputProtocol": "openai",
          "outputProtocol": "openai",
          "providers": {
            "openai-provider": {
              "apiKey": "***REDACTED***",
              "compatibility": {
                "config": {},
                "type": "passthrough-compatibility"
              },
              "enabled": true,
              "id": "openai-provider",
              "keyAliases": [
                "key1"
              ],
              "models": {
                "gpt-3.5-turbo": {
                  "maxTokens": 4096
                }
              },
              "type": "openai-provider"
            }
          },
          "routing": {
            "background": [],
            "coding": [],
            "default": [
              "openai-provider.gpt-3.5-turbo"
            ],
            "longcontext": [],
            "thinking": [],
            "tools": [],
            "vision": [],
            "websearch": []
          }
        }
      },
      "keyMappings": {
        "global": {
          "key1": "***REDACTED***"
        },
        "oauth": {},
        "providers": {
          "openai-provider": {
            "key1": "***REDACTED***"
          }
        }
      },
      "authMappings": {
        "authFiles": {},
        "oauthTokens": {},
        "oauthConfigs": {}
      },
      "routeTargets": {
        "background": [],
        "coding": [],
        "default": [
          {
            "providerId": "openai-provider",
            "modelId": "gpt-3.5-turbo",
            "keyId": "key1",
            "actualKey": "***REDACTED***",
            "inputProtocol": "openai",
            "outputProtocol": "openai"
          }
        ],
        "longcontext": [],
        "thinking": [],
        "tools": [],
        "vision": [],
        "websearch": []
      },
      "pipelineConfigs": {},
      "moduleConfigs": {
        "virtualrouter": {
          "enabled": true,
          "config": {
            "moduleType": "virtual-router",
            "inputProtocol": "openai",
            "outputProtocol": "openai"
          }
        },
        "httpserver": {
          "enabled": true,
          "config": {
            "port": 8080
          }
        },
        "stableSorting": {
          "enabled": true,
          "config": {
            "enabled": true,
            "sortProviders": true,
            "sortRouting": true,
            "sortKeyMappings": true
          }
        }
      }
    },
    "compatibilityWarnings": [
      {
        "code": "PROVIDER_TYPE_NORMALIZED",
        "message": "Normalized provider type from 'openai' to 'openai-provider' for provider 'openai-provider'",
        "path": "/virtualrouter/providers/openai-provider/type",
        "severity": "info",
        "details": {
          "originalValue": "openai",
          "normalizedValue": "openai-provider",
          "ruleApplied": "provider-type-normalization"
        }
      },
      {
        "code": "API_KEY_VALIDATION",
        "message": "Potentially invalid API key format at virtualrouter.providers.openai-provider.id",
        "path": "",
        "severity": "warn",
        "details": {
          "validationType": "direct-api-key",
          "recommendations": [
            "Some API keys appear to have invalid formats. Please verify your API keys are correct.",
            "Invalid API keys will cause authentication failures with AI providers."
          ]
        }
      },
      {
        "code": "API_KEY_VALIDATION",
        "message": "Potentially invalid API key format at virtualrouter.providers.openai-provider.apiKey",
        "path": "",
        "severity": "warn",
        "details": {
          "validationType": "direct-api-key",
          "recommendations": [
            "Some API keys appear to have invalid formats. Please verify your API keys are correct.",
            "Invalid API keys will cause authentication failures with AI providers."
          ]
        }
      },
      {
        "code": "API_KEY_VALIDATION",
        "message": "Potentially invalid API key format at virtualrouter.providers.openai-provider.compatibility.type",
        "path": "",
        "severity": "warn",
        "details": {
          "validationType": "direct-api-key",
          "recommendations": [
            "Some API keys appear to have invalid formats. Please verify your API keys are correct.",
            "Invalid API keys will cause authentication failures with AI providers."
          ]
        }
      },
      {
        "code": "API_KEY_VALIDATION",
        "message": "Potentially invalid API key format at virtualrouter.routing.default[0]",
        "path": "",
        "severity": "warn",
        "details": {
          "validationType": "direct-api-key",
          "recommendations": [
            "Some API keys appear to have invalid formats. Please verify your API keys are correct.",
            "Invalid API keys will cause authentication failures with AI providers."
          ]
        }
      }
    ]
  },
  "metadata": {
    "version": "1.0.0",
    "timestamp": 1759194503317,
    "author": "test",
    "tags": [
      "test",
      "basic"
    ]
  }
}